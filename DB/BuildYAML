apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  annotations:
    meta.helm.sh/release-name: new-relic
    meta.helm.sh/release-namespace: dk1921-h
  creationTimestamp: '2025-03-06T14:49:04Z'
  labels:
    app: new-relic
    app.kubernetes.io/instance: new-relic-int3
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: new-relic
    app.kubernetes.io/version: 2025.01.38-135-SNAPSHOT
    built-from: java-b2i-template
    helm.sh/chart: tsp-new-relic-2025.01.38-135-SNAPSHOT-build83int3
    heritage: Helm
    nar-id: 171240-1
    project: tsp
    version: 2025.01.38-135-SNAPSHOT-build83int3
  name: new-relic-runtime
  namespace: dk1921-h
  resourceVersion: '4100172871'
  selfLink: >-
    /apis/build.openshift.io/v1/namespaces/dk1921-h/buildconfigs/new-relic-runtime
  uid: 262afdc3-fa9a-11ef-90ef-005056bd4fe5
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: DockerImage
      name: >-
        docker-registry.svc.uk.paas.intranet.db.com/dk1921-h/new-relic:2025.01.38-135-SNAPSHOT-build83int3
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    dockerfile: >-
      FROM

      LABEL name="new-relic" \
            io.openshift.s2i.scripts-url="image:///usr/local/s2i" \
            summary="new-relic" \
            description="new-relic" \
            io.k8s.display-name="new-relic" \
            io.k8s.description="new-relic" \
            parent.image="java-open-jdk:17-compliant" \
            parent.image.1="new-relic-src:2025.01.38-135-SNAPSHOT-build83int3" \
            image.tag="2025.01.38-135-SNAPSHOT" \
            io.openshift.build.source-location="" \
            io.openshift.build.commit.author="" \
            io.openshift.build.commit.date="" \
            io.openshift.build.commit.id="" \
            io.openshift.build.commit.message="" \
            io.openshift.build.commit.ref=""
      RUN mkdir -p /new-deployments && \ echo "new-deployments directory created
      successfully!"  ENV TARGET_DIR="/new-deployments" COPY new-deployments/*
      /new-deployments/ COPY /usr/local/s2i/* /usr/local/s2i/ ENTRYPOINT
      ["/usr/local/s2i/run"] CMD ["sh", "-c", "echo 'Deployment successful!' >
      /new-deployments/info.log && tail -f /dev/null"]
    images:
      - as: null
        from:
          kind: DockerImage
          name: >-
            docker-registry.svc.uk.paas.intranet.db.com/dk1921-h/new-relic-src:2025.01.38-135-SNAPSHOT-build83int3
        paths:
          - destinationDir: new-deployments/
            sourcePath: /new-deployments/
          - destinationDir: usr/local/s2i/
            sourcePath: /usr/local/s2i
    type: Dockerfile
  strategy:
    dockerStrategy:
      env:
        - name: ARTIFACTORY_KEY
          valueFrom:
            secretKeyRef:
              key: artifactory-key
              name: artifactory-creds
      forcePull: true
      from:
        kind: DockerImage
        name: >-
          docker-registry.svc.uk.paas.intranet.db.com/fabric-managed-images/java-open-jdk:17-compliant
    type: Docker
  successfulBuildsHistoryLimit: 5
  triggers: []
status:
  lastVersion: 43
















--VERSION 2--





apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: new-relic-runtime
  namespace: dk1921-h
  labels:
    app: new-relic
    app.kubernetes.io/instance: new-relic-int3
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: new-relic
    app.kubernetes.io/version: 2025.01.38-135-SNAPSHOT
    built-from: java-b2i-template
    helm.sh/chart: tsp-new-relic-2025.01.38-135-SNAPSHOT-build83int3
    heritage: Helm
    project: tsp
    version: 2025.01.38-135-SNAPSHOT-build83int3
spec:
  failedBuildsHistoryLimit: 5
  output:
    to:
      kind: DockerImage
      name: docker-registry.svc.uk.paas.intranet.db.com/dk1921-h/new-relic:2025.01.38-135-SNAPSHOT-build83int3
  runPolicy: Serial
  source:
    type: Dockerfile
    dockerfile: |
      FROM docker-registry.svc.uk.paas.intranet.db.com/fabric-managed-images/java-open-jdk:17-compliant

      LABEL name="new-relic" \
            io.openshift.s2i.scripts-url="image:///usr/local/s2i" \
            summary="new-relic" \
            description="new-relic" \
            io.k8s.display-name="new-relic" \
            io.k8s.description="new-relic" \
            parent.image="java-open-jdk:17-compliant" \
            parent.image.1="new-relic-src:2025.01.38-135-SNAPSHOT-build83int3" \
            image.tag="2025.01.38-135-SNAPSHOT"

      # Create directory and confirm it exists
      RUN mkdir -p /new-deployments && echo "âœ… new-deployments directory created successfully!" && ls -la /new-deployments

      # Set environment variable for reference
      ENV TARGET_DIR="/new-deployments"

      # Ensure files exist before copying
      COPY new-deployments/ /new-deployments/
      COPY usr/local/s2i/ /usr/local/s2i/

      # Set proper ownership if needed (uncomment if permission issues arise)
      # RUN chown -R 1001:1001 /new-deployments && chmod -R 755 /new-deployments

      # Define entrypoint and keep container running
      ENTRYPOINT ["/usr/local/s2i/run"]
      CMD ["sh", "-c", "echo 'Deployment successful!' > /new-deployments/info.log && tail -f /dev/null"]
  strategy:
    dockerStrategy:
      env:
        - name: ARTIFACTORY_KEY
          valueFrom:
            secretKeyRef:
              name: artifactory-creds
              key: artifactory-key
      forcePull: true
      from:
        kind: DockerImage
        name: docker-registry.svc.uk.paas.intranet.db.com/fabric-managed-images/java-open-jdk:17-compliant
    type: Docker
  successfulBuildsHistoryLimit: 5
  triggers: []
status:
  lastVersion: 43



--ERROR--


Failed to process the resource.
Reason: buildconfigs.build.openshift.io "new-relic-runtime" is invalid: metadata.resourceVersion: Invalid value: 0x0: must be specified for an update












--V3--






apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: new-relic-runtime
  namespace: dk1921-h
  labels:
    app: new-relic
    app.kubernetes.io/instance: new-relic-int3
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: new-relic
    app.kubernetes.io/version: 2025.01.38-135-SNAPSHOT
    built-from: java-b2i-template
    helm.sh/chart: tsp-new-relic-2025.01.38-135-SNAPSHOT-build83int3
    heritage: Helm
    project: tsp
    version: 2025.01.38-135-SNAPSHOT-build83int3
spec:
  failedBuildsHistoryLimit: 5
  output:
    to:
      kind: DockerImage
      name: docker-registry.svc.uk.paas.intranet.db.com/dk1921-h/new-relic:2025.01.38-135-SNAPSHOT-build83int3
  runPolicy: Serial
  source:
    type: Dockerfile
    dockerfile: |
      FROM docker-registry.svc.uk.paas.intranet.db.com/fabric-managed-images/java-open-jdk:17-compliant

      LABEL name="new-relic" \
            io.openshift.s2i.scripts-url="image:///usr/local/s2i" \
            summary="new-relic" \
            description="new-relic" \
            io.k8s.display-name="new-relic" \
            io.k8s.description="new-relic" \
            parent.image="java-open-jdk:17-compliant" \
            parent.image.1="new-relic-src:2025.01.38-135-SNAPSHOT-build83int3" \
            image.tag="2025.01.38-135-SNAPSHOT"

      # Create directory and confirm it exists
      RUN mkdir -p /new-deployments && echo "new-deployments directory created successfully!" && ls -la /new-deployments 

      # Set environment variable for reference
      ENV TARGET_DIR="/new-deployments"

      # Ensure files exist before copying
      COPY new-deployments/ /new-deployments/
      COPY usr/local/s2i/ /usr/local/s2i/

      # Set proper ownership if needed (uncomment if permission issues arise)
      # RUN chown -R 1001:1001 /new-deployments && chmod -R 755 /new-deployments

      # Define entrypoint and keep container running
      ENTRYPOINT ["/usr/local/s2i/run"]
      CMD ["sh", "-c", "echo 'Deployment successful!' > /new-deployments/info.log && tail -f /dev/null"]
  strategy:
    dockerStrategy:
      env:
        - name: ARTIFACTORY_KEY
          valueFrom:
            secretKeyRef:
              name: artifactory-creds
              key: artifactory-key
      forcePull: true
      from:
        kind: DockerImage
        name: docker-registry.svc.uk.paas.intranet.db.com/fabric-managed-images/java-open-jdk:17-compliant
    type: Docker
  successfulBuildsHistoryLimit: 5
  triggers: []
status:
  lastVersion: 43


