PROCEDURE TO TRUNCATE PARTITIONS:


CREATE OR REPLACE PROCEDURE truncate_partition(
    p_table_name IN VARCHAR2,
    my_date IN DATE
) AS
    v_partition_name VARCHAR2(50);
    v_sql VARCHAR2(200);
    v_partition_date DATE;
    v_high_value_str VARCHAR2(32767);
BEGIN
    FOR rec IN (
        SELECT partition_name, high_value
        FROM user_tab_partitions
        WHERE table_name = UPPER(p_table_name)
        ORDER BY partition_position
    ) LOOP
        v_high_value_str := REGEXP_SUBSTR(TO_CHAR(rec.high_value), '[0-9]{4}-[0-9]{2}-[0-9]{2}');

        BEGIN
            EXECUTE IMMEDIATE 'SELECT TO_DATE(:1, ''YYYY-MM-DD'') FROM dual' INTO v_partition_date USING v_high_value_str;
        EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE('Error converting high_value_str to date: ' || SQLERRM || ' Value: ' || v_high_value_str);
                RETURN;
        END;
        IF my_date < v_partition_date THEN
            v_partition_name := rec.partition_name;
            DBMS_OUTPUT.PUT_LINE('MATCH FOUND: ' || v_partition_name);
            EXIT;
        END IF;
    END LOOP;
    IF v_partition_name IS NULL THEN
        DBMS_OUTPUT.PUT_LINE('No partition found for the given date.');
    ELSE
        v_sql := 'ALTER TABLE ' || p_table_name || ' TRUNCATE PARTITION ' || v_partition_name || ' UPDATE INDEXES';
        EXECUTE IMMEDIATE v_sql;
        DBMS_OUTPUT.PUT_LINE('Partition ' || v_partition_name || ' truncated successfully.');
    END IF;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No partition found for the given date.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END truncate_partition;



