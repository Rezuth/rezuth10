PROCEDURE TO TRUNCATE PARTITIONS:


create or replace procedure truncate_partition(
    p_table_name in varchar2,
    my_date in date
) as
    v_partition_name varchar2(50);
    v_sql varchar2(200);
    v_partition_date date;
    v_high_value_str varchar2(32767);
begin
    for rec in (
        select partition_name, high_value
        from user_tab_partitions
        where table_name = upper(p_table_name)
        order by partition_position
    ) loop
        v_high_value_str := regexp_substr(to_char(rec.high_value), '[0-9]{4}-[0-9]{2}-[0-9]{2}');
        begin
            execute immediate 'select to_date(:1, ''yyyy-mm-dd'') from dual' into v_partition_date using v_high_value_str;
        exception
            when others then
                dbms_output.put_line('error converting high_value_str to date: ' || sqlerrm || ' value: ' || v_high_value_str);
                return;
        end;
        if my_date < v_partition_date then
            v_partition_name := rec.partition_name;
            exit;
        end if;
    end loop;
    if v_partition_name is null then
        dbms_output.put_line('no partition found for the given date.');
    else
        v_sql := 'alter table ' || p_table_name || ' truncate partition ' || v_partition_name || ' update indexes';
        execute immediate v_sql;
        dbms_output.put_line('partition ' || v_partition_name || ' truncated successfully.');
    end if;
exception
    when no_data_found then
        dbms_output.put_line('no partition found for the given date.');
    when others then
        dbms_output.put_line('error: ' || sqlerrm);
end truncate_partition;




